/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Windows;

import Clases.Conexion;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Blob;
import java.sql.PreparedStatement;
import java.sql.ResultSetMetaData;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.imageio.ImageIO;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.toedter.calendar.JDateChooser;
import java.awt.event.ActionEvent;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.JTextComponent;
import java.sql.SQLException;
/**
 *
 * @author jesus y lai
 */
public class mainWindow extends javax.swing.JFrame {

    InputStream fis;
    int longitudBytes;
    ArrayList<Integer> listaIdEstudiantes;
    private StudentInfo selectedStudentInfo;
    //construtor
    public mainWindow() {
        initComponents();
        cargarTabla();
        // Deshabilita la edición del campo de texto del JDateChooser
        ((JTextField)entryFecha.getDateEditor().getUiComponent()).setEditable(false);
        
        btnModificar.setEnabled(false);
        btnVer.setEnabled(false);
        btnEditar.setEnabled(false);
        btnEditar.setVisible(false);
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
        btnModificar.setVisible(false);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void cargarTabla(){
        DefaultTableModel modeloTabla = (DefaultTableModel) tblEstudiantes.getModel();
        modeloTabla.setRowCount(0);

        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        listaIdEstudiantes = new ArrayList<>();

        try {
            Conexion conexion = new Conexion();
            Connection con = conexion.getConexion();
            ps = con.prepareStatement(
                    "SELECT \"RegistroEstudiantes\".\"idEstudiante\", nombre, apellido, cedula FROM \"RegistroEstudiantes\" ORDER BY \"idEstudiante\" ASC"
            );

            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                // Guardar el ID del estudiante en la lista
                int idEstudiante = rs.getInt("idEstudiante");
                listaIdEstudiantes.add(idEstudiante);

                // Crear una fila para la tabla con los datos del estudiante, excluyendo el idEstudiante
                Object[] fila = new Object[columnas - 1]; // -1 para excluir el idEstudiante
                for (int indice = 0; indice < columnas - 1; indice++) {
                    fila[indice] = rs.getObject(indice + 2); // +2 para compensar el índice y excluir el idEstudiante
                }
                modeloTabla.addRow(fila);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void limpiar(){
        labelImagen.setIcon(null); labelImagen.updateUI();
        entryNombre.setText("");
        entryApellido.setText("");
        entryCedula1.setText(""); entryCedula2.setText(""); entryCedula3.setText("");
        entryFecha.setDate(null);
        entryTelefono.setText("");
        entryCorreo.setText("");
        
        btnModificar.setEnabled(false);
    }
    
    private void desactivar(){
        btnImagen.setEnabled(false);
        entryNombre.setEnabled(false);
        entryApellido.setEnabled(false);
        entryCedula1.setEnabled(false); entryCedula2.setEnabled(false); entryCedula3.setEnabled(false);
        entryFecha.setEnabled(false);
        entryTelefono.setEnabled(false); comboBoxTelefono.setEnabled(false);
        entryCorreo.setEnabled(false);
    }
    
    private void activar(){
        btnImagen.setEnabled(true);
        entryNombre.setEnabled(true);
        entryApellido.setEnabled(true);
        entryCedula1.setEnabled(true); entryCedula2.setEnabled(true); entryCedula3.setEnabled(true);
        entryFecha.setEnabled(true);
        entryTelefono.setEnabled(true); comboBoxTelefono.setEnabled(true);
        entryCorreo.setEnabled(true);
    }
    
    private void verificacionEscritura(java.awt.event.KeyEvent evt, int longitud){
        int tecla = evt.getKeyChar();
        boolean numero = tecla >= '0' && tecla <= '9';
        JTextField entry = ((JTextField) (evt.getSource()));
        boolean longitudBooleana = entry.getText().length() >= longitud;
        if(!numero || longitudBooleana) evt.consume();
    }
    
    private void verificacionNombre(java.awt.event.KeyEvent evt){
        JTextComponent c = (JTextComponent) evt.getSource();
        int tecla = evt.getKeyChar();
        char ch = evt.getKeyChar();
        
        boolean numero = tecla > 95 && tecla < 122;
        boolean espacio = tecla == 32;
        JTextField entry = ((JTextField) (evt.getSource()));
        boolean primeraLetra = "".equals(entry.getText());
        if(primeraLetra){
            if(Character.isLowerCase(ch) == false){
                return;
            }
            try{
                c.getDocument().insertString(c.getCaretPosition(), "" + Character.toUpperCase(ch), null);
                evt.consume();
            }
            catch(BadLocationException e){

            }
        }
        boolean longitudBooleana = entry.getText().length() >= 20;
        if(!numero || longitudBooleana || espacio) evt.consume();
    }
    //validacion de informacion ingresada
    private String estadoError(){
        // Expresión regular para validar un correo electrónico
        String regex = "^(.+)@(.+)\\.(.+)$";
        
        System.out.println(entryCorreo.getText().matches(regex));
        
        System.out.println(labelImagen.getIcon());
        if(labelImagen.getIcon() == null){
            return "Imagen";
        }
        else if("".equals(entryNombre.getText())){
            return "Nombre";
        }
        else if("".equals(entryApellido.getText())){
            return "Apellido";
        }
        
        else if("".equals(entryCedula1.getText()) || entryCedula1.getText().length() < 7){
           return "Cedula imcompleta";
        }
        else if("".equals(entryTelefono.getText()) || entryTelefono.getText().length() < 7){
            return "Telefono";
        }
        else if("".equals(entryCorreo.getText()) || !entryCorreo.getText().matches(regex)){
            return "Correo";
        }
        else{
            return null;
        }
    }
          
    private boolean segundaCondicionError(){
        return estadoError() == null;
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnVer = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEstudiantes = new javax.swing.JTable();
        btnModificar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnImagen = new javax.swing.JButton();
        labelImagen = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        entryNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        entryCedula3 = new javax.swing.JTextField();
        entryCedula2 = new javax.swing.JTextField();
        entryCedula1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        entryFecha = new com.toedter.calendar.JDateChooser();
        entryTelefono = new javax.swing.JTextField();
        comboBoxTelefono = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        entryCorreo = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        entryApellido = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Estudiantes");
        setResizable(false);

        background.setBackground(new java.awt.Color(255, 255, 255));
        background.setPreferredSize(new java.awt.Dimension(1200, 655));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(0, 102, 102));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(15, 37, 110));
        jLabel2.setText("Registro");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 40, 150, 30));

        btnEliminar.setBackground(new java.awt.Color(15, 37, 110));
        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/basura.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 520, 100, 35));

        btnVer.setBackground(new java.awt.Color(15, 37, 110));
        btnVer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnVer.setForeground(new java.awt.Color(255, 255, 255));
        btnVer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ojo.png"))); // NOI18N
        btnVer.setText("Ver");
        btnVer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });
        jPanel1.add(btnVer, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 520, 100, 35));

        tblEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "Cedula"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEstudiantes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblEstudiantes.setDragEnabled(true);
        tblEstudiantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEstudiantesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblEstudiantes);
        if (tblEstudiantes.getColumnModel().getColumnCount() > 0) {
            tblEstudiantes.getColumnModel().getColumn(0).setResizable(false);
            tblEstudiantes.getColumnModel().getColumn(1).setResizable(false);
            tblEstudiantes.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 77, 430, 420));

        btnModificar.setBackground(new java.awt.Color(236, 255, 252));
        btnModificar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(0, 0, 153));
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 522, 100, 35));

        jPanel2.setBackground(new java.awt.Color(15, 37, 110));

        btnImagen.setBackground(new java.awt.Color(236, 255, 252));
        btnImagen.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnImagen.setForeground(new java.awt.Color(20, 70, 142));
        btnImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa.png"))); // NOI18N
        btnImagen.setText("Buscar Foto");
        btnImagen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagenActionPerformed(evt);
            }
        });

        labelImagen.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel12.setFont(new java.awt.Font("Constantia", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Nombre:");

        entryNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryNombreActionPerformed(evt);
            }
        });
        entryNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entryNombreKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Constantia", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Apellido:");

        entryCedula3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryCedula3ActionPerformed(evt);
            }
        });
        entryCedula3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entryCedula3KeyTyped(evt);
            }
        });

        entryCedula2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryCedula2ActionPerformed(evt);
            }
        });
        entryCedula2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entryCedula2KeyTyped(evt);
            }
        });

        entryCedula1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryCedula1ActionPerformed(evt);
            }
        });
        entryCedula1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entryCedula1KeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Constantia", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Cedula:");

        jLabel7.setFont(new java.awt.Font("Constantia", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Fecha de Nacimiento:");

        entryFecha.setDateFormatString("dd-MM-yyyy");
        entryFecha.setDoubleBuffered(false);

        entryTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryTelefonoActionPerformed(evt);
            }
        });
        entryTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entryTelefonoKeyTyped(evt);
            }
        });

        comboBoxTelefono.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0412", "0414", "0424", "0416", "0426" }));

        jLabel8.setFont(new java.awt.Font("Constantia", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/phone.png"))); // NOI18N
        jLabel8.setText("Teléfono");

        entryCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryCorreoActionPerformed(evt);
            }
        });
        entryCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entryCorreoKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Constantia", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/msj.png"))); // NOI18N
        jLabel9.setText("Correo:");

        btnGuardar.setBackground(new java.awt.Color(236, 255, 252));
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(20, 70, 142));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(236, 255, 252));
        btnLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(20, 70, 142));
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/escoba.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnEditar.setBackground(new java.awt.Color(236, 255, 252));
        btnEditar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(20, 70, 142));
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        entryApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryApellidoActionPerformed(evt);
            }
        });
        entryApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entryApellidoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(labelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnImagen))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(entryCedula1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(entryCedula2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(entryCedula3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(entryFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(entryCorreo, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(comboBoxTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(entryTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(entryNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(entryApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(107, 107, 107))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(139, 139, 139))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entryNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(entryApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entryCedula3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entryCedula2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entryCedula1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(entryFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entryTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entryCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(103, 103, 103))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 660));

        background.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 630));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void entryNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryNombreActionPerformed
        // TODO add your handling code here:
        entryApellido.requestFocus();
    }//GEN-LAST:event_entryNombreActionPerformed

    private void entryApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryApellidoActionPerformed
        // TODO add your handling code here:
        entryCedula1.requestFocus();
    }//GEN-LAST:event_entryApellidoActionPerformed

    private void entryTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryTelefonoActionPerformed
        // TODO add your handling code here:
        entryCorreo.requestFocus();
    }//GEN-LAST:event_entryTelefonoActionPerformed

    private void entryCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryCorreoActionPerformed
        // TODO add your handling code here:
        btnGuardarActionPerformed(evt);
    }//GEN-LAST:event_entryCorreoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dateformat = new SimpleDateFormat("dd-MM-yyyy");
        String nombre = entryNombre.getText();
        String apellido = entryApellido.getText();
        String cedula = entryCedula1.getText() + "." + entryCedula2.getText() + "." + entryCedula3.getText();
        String fecha = null;
        try{
            fecha = dateformat.format(entryFecha.getDate());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "No ha ingresado el campo de Fecha", "error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String telefono = comboBoxTelefono.getSelectedItem() + entryTelefono.getText();
        String correo = entryCorreo.getText();
        //Icon icono = labelImagen.getIcon();
        
        if(segundaCondicionError()){
            try{
                Conexion conexion = new Conexion();
                Connection con = conexion.getConexion();
                PreparedStatement ps = con.prepareStatement(
                        "INSERT INTO \"RegistroEstudiantes\" (foto, nombre, apellido, cedula, fecha, telefono, correo) VALUES (?, ?, ?, ?, ?, ?, ?)"
                );

                System.out.println(fis +  "<- primero segundo ->" + longitudBytes);
                ps.setBinaryStream(1, fis, longitudBytes);
                ps.setString(2, nombre);
                ps.setString(3, apellido);
                ps.setString(4, cedula);
                ps.setString(5, fecha);
                ps.setString(6, telefono);
                ps.setString(7, correo);
                ps.execute();
                ps.close();

                cargarTabla();
                // envia un mensaje en respuesta despues de guardar el usuario
                JOptionPane.showMessageDialog(null, "Se guardo de forma exitosa.");
                limpiar();
                btnModificar.setEnabled(false);
                btnVer.setEnabled(false);
                btnEditar.setEnabled(false);
                btnEliminar.setEnabled(false);
                btnModificar.setEnabled(false);
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "No ha ingresado el campo de " + estadoError(), "error", JOptionPane.ERROR_MESSAGE); 
                
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "No ha ingresado el campo de " + estadoError(), "error", JOptionPane.ERROR_MESSAGE); 
        }
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int fila = tblEstudiantes.getSelectedRow();
        int id = listaIdEstudiantes.get(fila);
            
        try{
            Conexion conexion = new Conexion();
            Connection con = conexion.getConexion();
            PreparedStatement ps = con.prepareStatement("DELETE FROM \"RegistroEstudiantes\" WHERE \"idEstudiante\"=?");
                
            ps.setInt(1, id);
            ps.execute();
            ps.close();
            
            cargarTabla();
            // envia un mensaje en respuesta despues de eliminar el usuario
            JOptionPane.showMessageDialog(null, "Eliminación exitosa.");
            limpiar();
            activar();
            
            btnGuardar.setEnabled(true);
            btnLimpiar.setEnabled(true);
            btnVer.setEnabled(false);
            btnEditar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed
        // apertura la nueva ventana que muestra la informacion del usuario
        btnEditar.setEnabled(true);
        btnEliminar.setEnabled(true);
        btnModificar.setEnabled(true);
        btnVer.setEnabled(true);
        
        VerWindow visualizacionWindow = new VerWindow(selectedStudentInfo);
        visualizacionWindow.setVisible(true);
    }//GEN-LAST:event_btnVerActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        btnEditar.setEnabled(false);
        btnGuardar.setEnabled(false);
        btnGuardar.setVisible(false);
        btnLimpiar.setEnabled(true);
        btnModificar.setEnabled(true);
        btnModificar.setVisible(true);
        activar();
        btnEditar.setVisible(false);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagenActionPerformed
        // TODO add your handling code here:
        labelImagen.setIcon(null);
        JFileChooser buscadorImagenes = new JFileChooser();
        buscadorImagenes.setFileSelectionMode(JFileChooser.FILES_ONLY);
        //Filter image extensions
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("IMÁGENES", "jpg", "jpeg", "png", "webp");
        buscadorImagenes.setFileFilter(filtro);
        int showOpenDialogue = buscadorImagenes.showOpenDialog(null);
        
        if(showOpenDialogue == JFileChooser.APPROVE_OPTION){
            try {
                fis = new FileInputStream(buscadorImagenes.getSelectedFile());
                
                this.longitudBytes = (int) buscadorImagenes.getSelectedFile().length();
                
                try{
                    Image icono = ImageIO.read(buscadorImagenes.getSelectedFile()).getScaledInstance(labelImagen.getWidth(), labelImagen.getHeight(), Image.SCALE_SMOOTH);
                    labelImagen.setIcon(new ImageIcon(icono));
                    labelImagen.updateUI();
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Imagen: " + e.getMessage());
                }
            } 
            catch (FileNotFoundException ex) {
                ex.printStackTrace();
            }
            
        }
    }//GEN-LAST:event_btnImagenActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        btnGuardar.setEnabled(true);
        btnGuardar.setVisible(true);
        btnEditar.setEnabled(true);
        btnEliminar.setEnabled(false);
        btnModificar.setEnabled(false);
        btnVer.setEnabled(false);
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tblEstudiantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEstudiantesMouseClicked
        // TODO add your handling code here:
        try{
            btnLimpiar.setEnabled(true);
            btnVer.setEnabled(true);
            btnEditar.setEnabled(true);
            btnEditar.setVisible(true);
            btnEliminar.setEnabled(true);
            btnModificar.setEnabled(true);
            // Desactivar
            desactivar();
            
            
            int fila = tblEstudiantes.getSelectedRow();
            int id = listaIdEstudiantes.get(fila);
            
            PreparedStatement ps;
            ResultSet rs;
            
            BufferedImage bi;
            ImageIcon foto;
            
            Conexion conexion = new Conexion();
            Connection con = conexion.getConexion();
            ps = con.prepareStatement("SELECT foto, nombre, apellido, cedula, fecha, telefono, correo FROM \"RegistroEstudiantes\" WHERE \"idEstudiante\"=?");
            ps.setInt(1, id);
            rs = ps.executeQuery();
            
            while(rs.next()){
                // Obtener los datos de la imagen del ResultSet
                InputStream inputStream = rs.getBinaryStream("foto");

                // Convertir la imagen en un array de bytes
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                byte[] buffer = new byte[4096];
                int bytesRead;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    baos.write(buffer, 0, bytesRead);
                }
                byte[] imagenBytes = baos.toByteArray();

                // Obtener la longitud de bytes de la imagen
                int longitudBytes = imagenBytes.length;

                bi = ImageIO.read(new ByteArrayInputStream(imagenBytes));

                foto = new ImageIcon(bi);

                Image img = foto.getImage();
                Image newImg = img.getScaledInstance(labelImagen.getWidth(), labelImagen.getHeight(), java.awt.Image.SCALE_SMOOTH);

                ImageIcon newIcon = new ImageIcon(newImg);

                // Establecer la imagen en el JLabel
                labelImagen.setIcon(newIcon);
                
                // Nombre
                entryNombre.setText(rs.getString("nombre"));
                
                // Apellido
                entryApellido.setText(rs.getString("apellido"));
                
                // Cedula
                String cedulaCompleta = rs.getString("cedula");
                cedulaCompleta = cedulaCompleta.replace(".", "");

                // Obtener la longitud total de la cadena
                int longitud = cedulaCompleta.length();

                // Inicializar las partes de la cadena
                String terceraParte = "";
                String segundaParte = "";
                String primeraParte = "";

                // Determinar la posición de inicio de cada parte
                int inicioTercera = longitud - 3;
                int inicioSegunda = Math.max(inicioTercera - 3, 0);
                int inicioPrimera = 0;

                // Extraer las partes de la cadena
                terceraParte = cedulaCompleta.substring(inicioTercera);
                if (inicioSegunda > 0) {
                    segundaParte = cedulaCompleta.substring(inicioSegunda, inicioTercera);
                }
                primeraParte = cedulaCompleta.substring(inicioPrimera, inicioSegunda);

                System.out.println("Primera parte: " + primeraParte);
                System.out.println("Segunda parte: " + segundaParte);
                System.out.println("Tercera parte: " + terceraParte);
                
                entryCedula1.setText(primeraParte);
                entryCedula2.setText(segundaParte);
                entryCedula3.setText(terceraParte);
                
                // Fecha
                String fechaStr = rs.getString("fecha");
                SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
                Date fecha = formato.parse(fechaStr);
                entryFecha.setDate(fecha);
                
                // Telefono
                String numeroTelefonoCompleto = rs.getString("telefono");

                // Obtener los primeros cuatro dígitos del número telefónico
                String primerosCuatroDigitos = numeroTelefonoCompleto.substring(0, 4);

                // Obtener el resto del número telefónico (después de los primeros cuatro dígitos)
                String restoNumeroTelefono = numeroTelefonoCompleto.substring(4);
                
                System.out.println("Los primeros: " + primerosCuatroDigitos + " los segundos: " + restoNumeroTelefono);

                // Establecer los primeros cuatro dígitos en el JComboBox
                comboBoxTelefono.setSelectedItem(primerosCuatroDigitos); // Establecer la selección en los primeros cuatro dígitos

                // Establecer el resto del número telefónico en el JTextField
                entryTelefono.setText(restoNumeroTelefono);

                // Correo
                entryCorreo.setText(rs.getString("correo"));
                
                fis = new ByteArrayInputStream(imagenBytes);
                this.longitudBytes = longitudBytes;
                
                btnGuardar.setEnabled(false);
                btnGuardar.setVisible(false);

                btnModificar.setEnabled(false);
                btnEliminar.setEnabled(true);
                
                //almacena la informacion en el caso de que el usuario desee verla con el boton ver
                selectedStudentInfo = new StudentInfo(id, newIcon,rs.getString("nombre"), rs.getString("apellido"),(primeraParte+"."+segundaParte+"."+terceraParte),fecha,(primerosCuatroDigitos+"-"+restoNumeroTelefono),rs.getString("correo"));
            }
        }
        catch(Exception e){
            System.out.println(e);;
        }
    }//GEN-LAST:event_tblEstudiantesMouseClicked

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        try {
            int fila = tblEstudiantes.getSelectedRow();
            int id = listaIdEstudiantes.get(fila);

            // Obtén los datos del estudiante de los campos de entrada y otros componentes de la interfaz gráfica
            SimpleDateFormat dateformat = new SimpleDateFormat("dd-MM-yyyy");
            String nombre = entryNombre.getText();
            String apellido = entryApellido.getText();
            String cedula = entryCedula1.getText() + "." + entryCedula2.getText() + "." + entryCedula3.getText();
            String fecha = dateformat.format(entryFecha.getDate());
            String telefono = comboBoxTelefono.getSelectedItem() + entryTelefono.getText();
            String correo = entryCorreo.getText();

            // Establece la conexión con la base de datos
            Conexion conexion = new Conexion();
            Connection con = conexion.getConexion();

            // Prepara la consulta de actualización excluyendo la columna "idEstudiante"
            PreparedStatement ps = con.prepareStatement("UPDATE \"RegistroEstudiantes\" SET foto=?, nombre=?, apellido=?, cedula=?, fecha=?, telefono=?, correo=? WHERE \"idEstudiante\"=?");
            ps.setBinaryStream(1, fis, longitudBytes);
            ps.setString(2, nombre);
            ps.setString(3, apellido);
            ps.setString(4, cedula);
            ps.setString(5, fecha);
            ps.setString(6, telefono);
            ps.setString(7, correo);
            ps.setInt(8, id);

            // Ejecuta la consulta
            ps.executeUpdate();
            ps.close();

            // Actualiza la tabla y muestra un mensaje de éxito
            cargarTabla();
            JOptionPane.showMessageDialog(null, "¡Modificación exitosa!");
            limpiar();
            
            btnVer.setEnabled(false);
            btnEditar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnModificar.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No a ingresado el campo de " + estadoError(), "error", JOptionPane.ERROR_MESSAGE);        
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void entryCedula1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryCedula1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_entryCedula1ActionPerformed

    private void entryCedula1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryCedula1KeyTyped
        // TODO add your handling code here:
        JTextComponent c = (JTextComponent) evt.getSource();
        int tecla = evt.getKeyChar();
        char teclaChar = evt.getKeyChar();
        
        boolean numeroPulsado = tecla > 95 && tecla < 122;
        JTextField entry = ((JTextField) (evt.getSource()));
        boolean primeraLetra = "".equals(entry.getText());
        if(primeraLetra){
            if(tecla == '0'){
                evt.consume();
                return;
            }
        }
        
        verificacionEscritura(evt, 2);
        int teclaPulsada = evt.getKeyChar();
        boolean numero = teclaPulsada >= '0' && teclaPulsada <= '9';
        if(!numero) evt.consume();
        
        String textoActual = entry.getText();

        // Verificar si el primer caracter es del 4 al 9
        if (textoActual.isEmpty()) {
            if (tecla >= '4' && tecla <= '9') {
                // Permitir solo 7 caracteres si el primer caracter es del 4 al 9
                if (textoActual.length() >= 1) {
                    evt.consume();
                    return;
                }
            } else if (tecla >= '1' && tecla <= '3') {
                // Permitir solo 8 caracteres si el primer caracter es del 1 al 3
                if (textoActual.length() >= 2) {
                    evt.consume();
                    return;
                }
            }
        } else {
            // Permitir solo números después del primer carácter
            if (!Character.isDigit(tecla)) {
                evt.consume();
                return;
            }

            // Permitir 7 caracteres si el primer caracter es del 4 al 9
            // Permitir 8 caracteres si el primer caracter es del 1 al 3
            if ((textoActual.charAt(0) >= '4' && textoActual.charAt(0) <= '9' && textoActual.length() >= 1) ||
                (textoActual.charAt(0) >= '1' && textoActual.charAt(0) <= '3' && textoActual.length() >= 2)) {
                evt.consume();
                return;
            }
        }
    }//GEN-LAST:event_entryCedula1KeyTyped

    private void entryTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryTelefonoKeyTyped
        // TODO add your handling code here:
        verificacionEscritura(evt, 7);
    }//GEN-LAST:event_entryTelefonoKeyTyped

    private void entryNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryNombreKeyTyped
        // TODO add your handling code here:
        verificacionNombre(evt);
    }//GEN-LAST:event_entryNombreKeyTyped

    private void entryApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryApellidoKeyTyped
        // TODO add your handling code here:
        verificacionNombre(evt);
    }//GEN-LAST:event_entryApellidoKeyTyped

    private void entryCorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryCorreoKeyTyped
        // TODO add your handling code here:
       JTextComponent c = (JTextComponent) evt.getSource();
        int tecla = evt.getKeyChar();
        
        boolean espacio = tecla == 32;
        JTextField entry = ((JTextField) (evt.getSource()));

        boolean longitudBooleana = entry.getText().length() >= 30;
        if(longitudBooleana || espacio) evt.consume(); 
    }//GEN-LAST:event_entryCorreoKeyTyped

    private void entryCedula3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryCedula3KeyTyped
        // TODO add your handling code here:
        verificacionEscritura(evt, 3);
    }//GEN-LAST:event_entryCedula3KeyTyped

    private void entryCedula3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryCedula3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entryCedula3ActionPerformed

    private void entryCedula2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryCedula2KeyTyped
        // TODO add your handling code here:
        verificacionEscritura(evt, 3);
    }//GEN-LAST:event_entryCedula2KeyTyped

    private void entryCedula2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryCedula2ActionPerformed
        // TODO add your handling code here:
        entryCedula3.requestFocus();
    }//GEN-LAST:event_entryCedula2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImagen;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnVer;
    private javax.swing.JComboBox<String> comboBoxTelefono;
    private javax.swing.JTextField entryApellido;
    private javax.swing.JTextField entryCedula1;
    private javax.swing.JTextField entryCedula2;
    private javax.swing.JTextField entryCedula3;
    private javax.swing.JTextField entryCorreo;
    private com.toedter.calendar.JDateChooser entryFecha;
    private javax.swing.JTextField entryNombre;
    private javax.swing.JTextField entryTelefono;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelImagen;
    private javax.swing.JTable tblEstudiantes;
    // End of variables declaration//GEN-END:variables
}
