/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Windows;

import Clases.Conexion;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Blob;
import java.sql.PreparedStatement;
import java.sql.ResultSetMetaData;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.imageio.ImageIO;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import com.toedter.calendar.JDateChooser;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author j2a0a
 */
public class mainWindow extends javax.swing.JFrame {
    InputStream fis;
    int longitudBytes;
    ArrayList<Integer> listaIdEstudiantes;
    /**
     * Creates new form mainWindow
     */
    public mainWindow() {
        initComponents();
        cargarTabla();
        // Deshabilita la edición del campo de texto del JDateChooser
        ((JTextField)entryFecha.getDateEditor().getUiComponent()).setEditable(false);
        
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void cargarTabla(){
        DefaultTableModel modeloTabla = (DefaultTableModel) tblEstudiantes.getModel();
        modeloTabla.setRowCount(0);

        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        listaIdEstudiantes = new ArrayList<>();

        try {
            Conexion conexion = new Conexion();
            Connection con = conexion.getConexion();
            ps = con.prepareStatement(
                    "SELECT \"ESTUDIANTES\".\"idEstudiante\", nombre, apellido, cedula FROM \"ESTUDIANTES\" ORDER BY \"idEstudiante\" ASC"
            );

            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                // Guardar el ID del estudiante en la lista
                int idEstudiante = rs.getInt("idEstudiante");
                listaIdEstudiantes.add(idEstudiante);

                // Crear una fila para la tabla con los datos del estudiante, excluyendo el idEstudiante
                Object[] fila = new Object[columnas - 1]; // -1 para excluir el idEstudiante
                for (int indice = 0; indice < columnas - 1; indice++) {
                    fila[indice] = rs.getObject(indice + 2); // +2 para compensar el índice y excluir el idEstudiante
                }
                modeloTabla.addRow(fila);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void limpiar(){
        labelImagen.setIcon(null); labelImagen.updateUI();
        entryNombre.setText("");
        entryApellido.setText("");
        entryCedula1.setText(""); entryCedula2.setText(""); entryCedula3.setText("");
        entryFecha.setDate(null);
        entryTelefono.setText("");
        entryCorreo.setText("");
        
        btnModificar.setEnabled(false);
    }
    
    private void desactivar(){
        btnImagen.setEnabled(false);
        entryNombre.setEnabled(false);
        entryApellido.setEnabled(false);
        entryCedula1.setEnabled(false); entryCedula2.setEnabled(false); entryCedula3.setEnabled(false);
        entryFecha.setEnabled(false);
        entryTelefono.setEnabled(false); comboBoxTelefono.setEnabled(false);
        entryCorreo.setEnabled(false);
    }
    
    private void activar(){
        btnImagen.setEnabled(true);
        entryNombre.setEnabled(true);
        entryApellido.setEnabled(true);
        entryCedula1.setEnabled(true); entryCedula2.setEnabled(true); entryCedula3.setEnabled(true);
        entryFecha.setEnabled(true);
        entryTelefono.setEnabled(true); comboBoxTelefono.setEnabled(true);
        entryCorreo.setEnabled(true);
    }
    
    private void verificacionEscritura(java.awt.event.KeyEvent evt, int longitud){
        int tecla = evt.getKeyChar();
        boolean numero = tecla >= '0' && tecla <= '9';
        JTextField entry = ((JTextField) (evt.getSource()));
        boolean longitudBooleana = entry.getText().length() >= longitud;
        if(!numero || longitudBooleana) evt.consume();
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        entryNombre = new javax.swing.JTextField();
        entryApellido = new javax.swing.JTextField();
        entryCedula3 = new javax.swing.JTextField();
        comboBoxTelefono = new javax.swing.JComboBox<>();
        entryTelefono = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        entryCorreo = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnVer = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEstudiantes = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        entryFecha = new com.toedter.calendar.JDateChooser();
        labelImagen = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnImagen = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        entryCedula1 = new javax.swing.JTextField();
        entryCedula2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Estudiantes");
        setResizable(false);

        background.setBackground(new java.awt.Color(255, 255, 255));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(0, 102, 102));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 50, 50, 540));

        jLabel2.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        jLabel2.setText("Registro");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 50, 150, 30));

        jLabel3.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        jLabel3.setText("Estudiantes");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 10, 110, 30));

        jLabel4.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        jLabel4.setText("Foto:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 80, 30));

        jLabel5.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        jLabel5.setText("Apellido:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 80, 30));

        jLabel6.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        jLabel6.setText("Cedula:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 80, 30));

        jLabel7.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        jLabel7.setText("Fecha de Nacimiento:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 200, 30));

        jLabel8.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        jLabel8.setText("Telefono Movil:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 150, 30));

        entryNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryNombreActionPerformed(evt);
            }
        });
        jPanel1.add(entryNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 460, 40));

        entryApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryApellidoActionPerformed(evt);
            }
        });
        jPanel1.add(entryApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 250, 460, 40));

        entryCedula3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryCedula3ActionPerformed(evt);
            }
        });
        entryCedula3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entryCedula3KeyTyped(evt);
            }
        });
        jPanel1.add(entryCedula3, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 320, 70, 40));

        comboBoxTelefono.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0412", "0414", "0424", "0416", "0426" }));
        jPanel1.add(comboBoxTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 430, 90, 40));

        entryTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryTelefonoActionPerformed(evt);
            }
        });
        entryTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entryTelefonoKeyTyped(evt);
            }
        });
        jPanel1.add(entryTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 430, 310, 40));

        jLabel9.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        jLabel9.setText("Correo:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 70, 30));

        entryCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryCorreoActionPerformed(evt);
            }
        });
        jPanel1.add(entryCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 510, 480, 40));

        btnGuardar.setBackground(new java.awt.Color(236, 255, 252));
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(0, 102, 102));
        btnGuardar.setText("Guardar");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 580, 100, -1));

        btnEliminar.setBackground(new java.awt.Color(236, 255, 252));
        btnEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(0, 102, 102));
        btnEliminar.setText("Eliminar");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 580, 100, -1));

        btnVer.setBackground(new java.awt.Color(236, 255, 252));
        btnVer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnVer.setForeground(new java.awt.Color(0, 102, 102));
        btnVer.setText("Ver");
        btnVer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });
        jPanel1.add(btnVer, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 580, 80, -1));

        tblEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido", "Cedula"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEstudiantes.setDragEnabled(true);
        tblEstudiantes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEstudiantesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblEstudiantes);
        if (tblEstudiantes.getColumnModel().getColumnCount() > 0) {
            tblEstudiantes.getColumnModel().getColumn(0).setResizable(false);
            tblEstudiantes.getColumnModel().getColumn(1).setResizable(false);
            tblEstudiantes.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 80, -1, -1));

        btnEditar.setBackground(new java.awt.Color(236, 255, 252));
        btnEditar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(0, 102, 102));
        btnEditar.setText("Editar");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 580, 90, -1));

        entryFecha.setDateFormatString("dd-MM-yyyy");
        entryFecha.setDoubleBuffered(false);
        jPanel1.add(entryFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 380, 350, 30));

        labelImagen.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel1.add(labelImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 160, 130));

        jLabel12.setFont(new java.awt.Font("Constantia", 1, 18)); // NOI18N
        jLabel12.setText("Nombre:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 80, 30));

        btnImagen.setBackground(new java.awt.Color(236, 255, 252));
        btnImagen.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnImagen.setForeground(new java.awt.Color(0, 102, 102));
        btnImagen.setText("Buscar//");
        btnImagen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagenActionPerformed(evt);
            }
        });
        jPanel1.add(btnImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 80, 120, 50));

        btnLimpiar.setBackground(new java.awt.Color(236, 255, 252));
        btnLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(0, 102, 102));
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 580, 100, -1));

        btnModificar.setBackground(new java.awt.Color(236, 255, 252));
        btnModificar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(0, 102, 102));
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 580, 100, -1));

        entryCedula1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryCedula1ActionPerformed(evt);
            }
        });
        entryCedula1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entryCedula1KeyTyped(evt);
            }
        });
        jPanel1.add(entryCedula1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 70, 40));

        entryCedula2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entryCedula2ActionPerformed(evt);
            }
        });
        entryCedula2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                entryCedula2KeyTyped(evt);
            }
        });
        jPanel1.add(entryCedula2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, 70, 40));

        background.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 630));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void entryNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryNombreActionPerformed
        // TODO add your handling code here:
        entryApellido.requestFocus();
    }//GEN-LAST:event_entryNombreActionPerformed

    private void entryApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryApellidoActionPerformed
        // TODO add your handling code here:
        entryCedula1.requestFocus();
    }//GEN-LAST:event_entryApellidoActionPerformed

    private void entryCedula3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryCedula3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_entryCedula3ActionPerformed

    private void entryTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryTelefonoActionPerformed
        // TODO add your handling code here:
        entryCorreo.requestFocus();
    }//GEN-LAST:event_entryTelefonoActionPerformed

    private void entryCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryCorreoActionPerformed
        // TODO add your handling code here:
        btnGuardarActionPerformed(evt);
    }//GEN-LAST:event_entryCorreoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat dateformat = new SimpleDateFormat("dd-MM-yyyy");
        String nombre = entryNombre.getText();
        String apellido = entryApellido.getText();
        String cedula = entryCedula1.getText() + "." + entryCedula2.getText() + "." + entryCedula3.getText();
        String fecha = dateformat.format(entryFecha.getDate());
        String telefono = comboBoxTelefono.getSelectedItem() + entryTelefono.getText();
        String correo = entryCorreo.getText();
        //Icon icono = labelImagen.getIcon();
            
        try{
            Conexion conexion = new Conexion();
            Connection con = conexion.getConexion();
            PreparedStatement ps = con.prepareStatement(
                    "INSERT INTO \"ESTUDIANTES\" (foto, nombre, apellido, cedula, fecha, telefono, correo) VALUES (?, ?, ?, ?, ?, ?, ?)"
            );
            
            System.out.println(fis +  "<- primero segundo ->" + longitudBytes);
            ps.setBinaryStream(1, fis, longitudBytes);
            ps.setString(2, nombre);
            ps.setString(3, apellido);
            ps.setString(4, cedula);
            ps.setString(5, fecha);
            ps.setString(6, telefono);
            ps.setString(7, correo);
            ps.execute();
            ps.close();
            
            cargarTabla();
            JOptionPane.showMessageDialog(null, "listoooooooooo");
            limpiar();
            btnModificar.setEnabled(false);
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int fila = tblEstudiantes.getSelectedRow();
        int id = listaIdEstudiantes.get(fila);
        
            
        try{
            Conexion conexion = new Conexion();
            Connection con = conexion.getConexion();
            PreparedStatement ps = con.prepareStatement("DELETE FROM \"ESTUDIANTES\" WHERE \"idEstudiante\"=?");
                
            ps.setInt(1, id);
            ps.execute();
            ps.close();
            
            cargarTabla();
            JOptionPane.showMessageDialog(null, "listoooooooooo");
            limpiar();
            activar();
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVerActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        btnGuardar.setEnabled(true);
        btnLimpiar.setEnabled(true);
        btnModificar.setEnabled(true);
        activar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagenActionPerformed
        // TODO add your handling code here:
        labelImagen.setIcon(null);
        JFileChooser buscadorImagenes = new JFileChooser();
        buscadorImagenes.setFileSelectionMode(JFileChooser.FILES_ONLY);
        //Filter image extensions
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("IMÁGENES", "jpg", "jpeg", "png", "webp");
        buscadorImagenes.setFileFilter(filtro);
        int showOpenDialogue = buscadorImagenes.showOpenDialog(null);
        
        if(showOpenDialogue == JFileChooser.APPROVE_OPTION){
            try {
                fis = new FileInputStream(buscadorImagenes.getSelectedFile());
                
                this.longitudBytes = (int) buscadorImagenes.getSelectedFile().length();
                
                try{
                    Image icono = ImageIO.read(buscadorImagenes.getSelectedFile()).getScaledInstance(labelImagen.getWidth(), labelImagen.getHeight(), Image.SCALE_SMOOTH);
                    labelImagen.setIcon(new ImageIcon(icono));
                    labelImagen.updateUI();
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(null, "Imagen: " + e.getMessage());
                }
            } 
            catch (FileNotFoundException ex) {
                ex.printStackTrace();
            }
            
        }
    }//GEN-LAST:event_btnImagenActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tblEstudiantesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEstudiantesMouseClicked
        // TODO add your handling code here:
        try{
            // Desactivar
            desactivar();
            
            
            int fila = tblEstudiantes.getSelectedRow();
            int id = listaIdEstudiantes.get(fila);
            
            PreparedStatement ps;
            ResultSet rs;
            
            BufferedImage bi;
            ImageIcon foto;
            
            Conexion conexion = new Conexion();
            Connection con = conexion.getConexion();
            ps = con.prepareStatement("SELECT foto, nombre, apellido, cedula, fecha, telefono, correo FROM \"ESTUDIANTES\" WHERE \"idEstudiante\"=?");
            ps.setInt(1, id);
            rs = ps.executeQuery();
            
            while(rs.next()){
                // Obtener los datos de la imagen del ResultSet
                InputStream inputStream = rs.getBinaryStream("foto");

                // Convertir la imagen en un array de bytes
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                byte[] buffer = new byte[4096];
                int bytesRead;
                while ((bytesRead = inputStream.read(buffer)) != -1) {
                    baos.write(buffer, 0, bytesRead);
                }
                byte[] imagenBytes = baos.toByteArray();

                // Obtener la longitud de bytes de la imagen
                int longitudBytes = imagenBytes.length;

                bi = ImageIO.read(new ByteArrayInputStream(imagenBytes));

                foto = new ImageIcon(bi);

                Image img = foto.getImage();
                Image newImg = img.getScaledInstance(labelImagen.getWidth(), labelImagen.getHeight(), java.awt.Image.SCALE_SMOOTH);

                ImageIcon newIcon = new ImageIcon(newImg);

                // Establecer la imagen en el JLabel
                labelImagen.setIcon(newIcon);
                
                // Nombre
                entryNombre.setText(rs.getString("nombre"));
                
                // Apellido
                entryApellido.setText(rs.getString("apellido"));
                
                // Cedula
                String cedulaCompleta = rs.getString("cedula");
                cedulaCompleta = cedulaCompleta.replace(".", "");

                // Obtener la longitud total de la cadena
                int longitud = cedulaCompleta.length();

                // Inicializar las partes de la cadena
                String terceraParte = "";
                String segundaParte = "";
                String primeraParte = "";

                // Determinar la posición de inicio de cada parte
                int inicioTercera = longitud - 3;
                int inicioSegunda = Math.max(inicioTercera - 3, 0);
                int inicioPrimera = 0;

                // Extraer las partes de la cadena
                terceraParte = cedulaCompleta.substring(inicioTercera);
                if (inicioSegunda > 0) {
                    segundaParte = cedulaCompleta.substring(inicioSegunda, inicioTercera);
                }
                primeraParte = cedulaCompleta.substring(inicioPrimera, inicioSegunda);

                System.out.println("Primera parte: " + primeraParte);
                System.out.println("Segunda parte: " + segundaParte);
                System.out.println("Tercera parte: " + terceraParte);
                
                entryCedula1.setText(primeraParte);
                entryCedula2.setText(segundaParte);
                entryCedula3.setText(terceraParte);
                
                // Fecha
                String fechaStr = rs.getString("fecha");
                SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
                Date fecha = formato.parse(fechaStr);
                entryFecha.setDate(fecha);
                
                // Telefono
                String numeroTelefonoCompleto = rs.getString("telefono");

                // Obtener los primeros cuatro dígitos del número telefónico
                String primerosCuatroDigitos = numeroTelefonoCompleto.substring(0, 4);

                // Obtener el resto del número telefónico (después de los primeros cuatro dígitos)
                String restoNumeroTelefono = numeroTelefonoCompleto.substring(4);
                
                System.out.println("Los primeros: " + primerosCuatroDigitos + " los segundos: " + restoNumeroTelefono);

                // Establecer los primeros cuatro dígitos en el JComboBox
                comboBoxTelefono.setSelectedItem(primerosCuatroDigitos); // Establecer la selección en los primeros cuatro dígitos

                // Establecer el resto del número telefónico en el JTextField
                entryTelefono.setText(restoNumeroTelefono);

                // Correo
                entryCorreo.setText(rs.getString("correo"));
                
                fis = new ByteArrayInputStream(imagenBytes);
                this.longitudBytes = longitudBytes;
                
                btnGuardar.setEnabled(false);
                btnLimpiar.setEnabled(false);
                btnModificar.setEnabled(false);
                btnEliminar.setEnabled(true);
            }
        }
        catch(Exception e){
            System.out.println(e);;
        }
    }//GEN-LAST:event_tblEstudiantesMouseClicked

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        try {
            int fila = tblEstudiantes.getSelectedRow();
            int id = listaIdEstudiantes.get(fila);

            // Obtén los datos del estudiante de los campos de entrada y otros componentes de la interfaz gráfica
            SimpleDateFormat dateformat = new SimpleDateFormat("dd-MM-yyyy");
            String nombre = entryNombre.getText();
            String apellido = entryApellido.getText();
            String cedula = entryCedula1.getText() + "." + entryCedula2.getText() + "." + entryCedula3.getText();
            String fecha = dateformat.format(entryFecha.getDate());
            String telefono = comboBoxTelefono.getSelectedItem() + entryTelefono.getText();
            String correo = entryCorreo.getText();

            // Establece la conexión con la base de datos
            Conexion conexion = new Conexion();
            Connection con = conexion.getConexion();

            // Prepara la consulta de actualización excluyendo la columna "idEstudiante"
            PreparedStatement ps = con.prepareStatement("UPDATE \"ESTUDIANTES\" SET foto=?, nombre=?, apellido=?, cedula=?, fecha=?, telefono=?, correo=? WHERE \"idEstudiante\"=?");
            ps.setBinaryStream(1, fis, longitudBytes);
            ps.setString(2, nombre);
            ps.setString(3, apellido);
            ps.setString(4, cedula);
            ps.setString(5, fecha);
            ps.setString(6, telefono);
            ps.setString(7, correo);
            ps.setInt(8, id);

            // Ejecuta la consulta
            ps.executeUpdate();
            ps.close();

            // Actualiza la tabla y muestra un mensaje de éxito
            cargarTabla();
            JOptionPane.showMessageDialog(null, "¡Modificación exitosa!");
            limpiar();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void entryCedula1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryCedula1ActionPerformed
        // TODO add your handling code here:
        entryCedula2.requestFocus();
    }//GEN-LAST:event_entryCedula1ActionPerformed

    private void entryCedula2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entryCedula2ActionPerformed
        // TODO add your handling code here:
        entryCedula3.requestFocus();
    }//GEN-LAST:event_entryCedula2ActionPerformed

    private void entryCedula1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryCedula1KeyTyped
        // TODO add your handling code here:
        verificacionEscritura(evt, 2);
    }//GEN-LAST:event_entryCedula1KeyTyped

    private void entryCedula2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryCedula2KeyTyped
        // TODO add your handling code here:
        verificacionEscritura(evt, 3);
    }//GEN-LAST:event_entryCedula2KeyTyped

    private void entryCedula3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryCedula3KeyTyped
        // TODO add your handling code here:
        verificacionEscritura(evt, 3);
    }//GEN-LAST:event_entryCedula3KeyTyped

    private void entryTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_entryTelefonoKeyTyped
        // TODO add your handling code here:
        verificacionEscritura(evt, 7);
    }//GEN-LAST:event_entryTelefonoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnImagen;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnVer;
    private javax.swing.JComboBox<String> comboBoxTelefono;
    private javax.swing.JTextField entryApellido;
    private javax.swing.JTextField entryCedula1;
    private javax.swing.JTextField entryCedula2;
    private javax.swing.JTextField entryCedula3;
    private javax.swing.JTextField entryCorreo;
    private com.toedter.calendar.JDateChooser entryFecha;
    private javax.swing.JTextField entryNombre;
    private javax.swing.JTextField entryTelefono;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelImagen;
    private javax.swing.JTable tblEstudiantes;
    // End of variables declaration//GEN-END:variables
}
